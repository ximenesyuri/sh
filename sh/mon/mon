#! /bin/bash

function get_monitors(){
    has_xrandr=$(which xrandr)
    if [[ -z "$has_xrandr" ]]; then
        echo "error: xrandr not found in \$PATH."
        return 1
    fi
    monitors=($(xrandr --listmonitors | awk '{print $2}' | sed 's/*//g' | sed 's/+//g'))
    number_of_monitors="${#monitors[@]}"
    if [[ $number_of_monitors -le 1 ]]; then
        echo "error: could not found any monitor."
        return 1
    else
        HDMI=()
        for ((i=0; i<number_of_monitors; i++)); do
            has_HDMI=($(echo "${monitors[$i]}" | grep -i HDMI))
            if [[ -n "$has_HDMI" ]]; then
                HDMI+=("$has_HDMI")
            fi
        done
        if [[ ${#HDMI[@]} -eq 0 ]]; then
            main_monitor=${monitors[1]}
            HDMI="HDMI-1" 
        elif [[ ${#HDMI[@]} -gt 1 ]]; then
            echo "error: there are multiples HDMI connections."
            echo "Be sure to have a single HDMI connection."
            return 1
        else
            if [[ ${monitors[1]} == ${HDMI[0]} ]]; then
                main_monitor=${monitors[2]}
                HDMI=${monitors[1]}
            else
                main_monitor=${monitors[1]}
                HDMI=${monitors[2]}
            fi
        fi
    fi
}

function get_sink(){
    has_yq=$(which jq)
    if [[ -z "$has_yq" ]]; then
        echo "error: jq not found in \$PATH."
        return 1
    fi
    has_pactl=$(which pactl)
    if [[ -z "$has_yq" ]]; then
        echo "error: pactl not found in \$PATH."
        return 1
    fi
    number_of_sinks=$(pactl --format=json list sinks | jq 'length') 
    for ((i=0; i<number_of_sinks; i++)); do
        ports=$(pactl --format=json list sinks | jq ".[$i].ports")
        has_speaker=$(echo "$ports" | grep -i "speaker" )
        has_headphone=$(echo "$ports" | grep -i "headphone" )
        if [[ -n "$has_speaker" ]] &&
           [[ -n "$has_headphone" ]]; then
            sink=$(pactl --format=json list sinks | jq ".[$i].name" | sed 's/"//g')
            break
        else
            continue
        fi
    done
    if [[ -z "$sink" ]]; then
        echo "error: not found a sink with speaker and headphone."
        return 1
    fi
}

function core(){
    get_monitors
    if [[ "$?" == "1" ]]; then
        return 1
    fi
    get_sink
    if [[ "$?" == "1" ]]; then
        return 1
    fi
    if [[ -n "$2" ]]; then
        echo "error: expected a single argument."
        return 1
    fi
    eval "xrandr --output $main_monitor --auto --output $HDMI --auto --${1}-of $main_monitor"
    pactl set-default-sink $sink
}

function mon() {
    if [[ -z "$1" ]]; then
        if [[ -z "${MONITOR_POSITION}" ]]; then
        echo "error: env MONITOR_POSITION was not defined."
        return 1
        fi
        if [[ ! ${MONITOR_POSITION} == "right" ]] ||
           [[ ! ${MONITOR_POSITION} == "left" ]]; then
            echo "error: MONITOR_POSITION must be set to right/left."
            return 1
        fi
    elif [[ "$1" == "right" ]] ||
         [[ "$1" == "left" ]]; then
        core "$@"
        if [[ "$?" == "1" ]]; then
            return 1
        fi
    else
        echo "error: you must enter right/left or set it in the env MONITOR_POSITION"
        return 1
    fi
}

mon "$@"

unset -f get_monitors
unset -f get_sink
unset -f core
