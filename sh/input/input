#! /bin/bash

function input_ {
    function editor_ {
        local file="$1"

        local editor="${EDITOR:-$(command -v vim || echo 'error: No suitable editor found.')}"
        if [[ "$editor" == "error:"* ]]; then
            echo "$editor"
            return 1
        fi

        "$editor" "$file"
    }

    local prompt="> "
    local extension="txt"
    local var="_input"

    while [[ $# -gt 0 ]]; do
        case "$1" in
            -p|--prompt)
                prompt="$2"
                shift 2
                ;;
            -e|--ext|--extension)
                extension="$2"
                shift 2
                ;;
            -v|--var)
                var="$2"
                shift 2
                ;;
            *)
                echo "Unknown option: $1"
                return 1
                ;;
        esac
    done

    local tmp_file
    tmp_file="$(mktemp --suffix=.$extension)"
    local input=""
    local cursor=0

    exec 3<&0
    exec < /dev/tty

    trap "" SIGINT SIGTSTP # do nothing with Ctrl+C (SIGINT) and Ctrl+Z (SIGTSTP)
    stty -echo
    echo -n "$prompt"

    while true; do
        IFS= read -r -s -n1 char
        case "$char" in
            $'\t'|$'\x09')
                stty echo
                if ! editor_ "$tmp_file"; then
                    rm -f "$tmp_file"
                    return 1
                fi
                input=$(<"$tmp_file")
                input=$(echo "$input" | jq -R -s .)
                rm -f "$tmp_file"
                cd - > /dev/null
                break
                ;;
            '')
                echo
                break
                ;;
            $'\x08'|$'\x7f')
                if (( cursor > 0 )); then
                    input="${input:0:cursor-1}${input:cursor}"
                    ((cursor--))
                    echo -ne "\b \b"
                fi
                ;;
            $'\x1b')
                read -r -s -n2 -t 0.1 rest
                if [[ -z "$rest" ]]; then
                    echo
                    stty echo
                    exec 0<&3 3<&-
                    rm -f "$tmp_file"
                    return 0
                fi
                if [[ "$rest" == "[C" ]]; then
                    if (( cursor < ${#input} )); then
                        ((cursor++))
                        echo -ne "\e[C"
                    fi
                elif [[ "$rest" == "[D" ]]; then
                    if (( cursor > 0 )); then
                        ((cursor--))
                        echo -ne "\e[D"
                    fi
                fi
                ;;
            $'\x04') # Ctrl+D
                echo
                stty echo
                exec 0<&3 3<&-
                rm -f "$tmp_file"
                return 0
                ;;
            *)
                input="${input:0:cursor}$char${input:cursor}"
                ((cursor++))
                echo -ne "\r${prompt}${input} \r${prompt}"
                for (( i=0; i<cursor; i++ )); do
                    echo -ne "\e[C"
                done
                ;;
        esac
    done

    stty echo
    exec 0<&3 3<&-
    declare -g "$var"="$input"
}

